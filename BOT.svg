<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1800 1000">
    <defs>
        <filter id="dropShadow">
            <feDropShadow dx="0" dy="2" stdDeviation="2" flood-opacity="0.15"/>
        </filter>
        <style>
            .folder { font-family: system-ui, sans-serif; font-size: 16px; }
            .file { font-family: system-ui, sans-serif; font-size: 14px; }
            .description { font-family: system-ui, sans-serif; font-size: 14px; fill: #64748b; }
            .title { font-family: system-ui, sans-serif; font-size: 24px; font-weight: bold; }
            .subtitle { font-family: system-ui, sans-serif; font-size: 16px; fill: #64748b; }
            .tech-title { font-family: system-ui, sans-serif; font-size: 16px; fill: #3b82f6; }
        </style>
    </defs>

    <rect width="1800" height="1000" fill="#ffffff"/>
    
    <!-- 标题区域 -->
    <g transform="translate(40, 40)">
        <text class="title" fill="#0f172a">Telegram Bot Project Structure</text>
        <text x="0" y="30" class="subtitle">基于 Vercel 部署的 Telegram 机器人项目结构图</text>
    </g>

    <!-- 左侧区域 -->
    <g transform="translate(40, 100)">
        <!-- api 目录 -->
        <rect x="0" y="0" width="800" height="180" rx="8" fill="#e2e8f0" filter="url(#dropShadow)"/>
        <text x="20" y="30" class="folder">📁 api</text>
        <text x="200" y="30" class="description">核心API接口目录</text>
        <g transform="translate(40, 50)">
            <text x="0" y="20" class="file">📄 config/keyboards.js</text>
            <text x="200" y="20" class="description">机器人键盘布局配置</text>
            <text x="0" y="45" class="file">📄 config/bot.js</text>
            <text x="200" y="45" class="description">机器人核心功能实现</text>
            <text x="0" y="70" class="file">📄 config/database.js</text>
            <text x="200" y="70" class="description">数据库连接管理</text>
            <text x="0" y="95" class="file">📄 config/types.js</text>
            <text x="200" y="95" class="description">类型定义和常量</text>
            <text x="0" y="120" class="file">📄 config/webhook.js</text>
            <text x="200" y="120" class="description">Telegram webhook处理</text>
        </g>

        <!-- handlers 目录 -->
        <g transform="translate(0, 200)">
            <rect x="0" y="0" width="800" height="120" rx="8" fill="#e2e8f0" filter="url(#dropShadow)"/>
            <text x="20" y="30" class="folder">📁 handlers</text>
            <text x="200" y="30" class="description">消息和命令处理器</text>
            <g transform="translate(40, 50)">
                <text x="0" y="20" class="file">📄 commands.js</text>
                <text x="200" y="20" class="description">命令处理逻辑</text>
                <text x="0" y="45" class="file">📄 errors.js</text>
                <text x="200" y="45" class="description">错误处理机制</text>
                <text x="0" y="70" class="file">📄 messages.js</text>
                <text x="200" y="70" class="description">消息处理逻辑</text>
            </g>
        </g>

        <!-- services 目录 -->
        <g transform="translate(0, 340)">
            <rect x="0" y="0" width="800" height="120" rx="8" fill="#e2e8f0" filter="url(#dropShadow)"/>
            <text x="20" y="30" class="folder">📁 services</text>
            <text x="200" y="30" class="description">核心服务实现</text>
            <g transform="translate(40, 50)">
                <text x="0" y="20" class="file">📄 logger.js</text>
                <text x="200" y="20" class="description">日志服务</text>
                <text x="0" y="45" class="file">📄 monitoring.js</text>
                <text x="200" y="45" class="description">监控服务</text>
                <text x="0" y="70" class="file">📄 statistics.js</text>
                <text x="200" y="70" class="description">统计服务</text>
            </g>
        </g>
    </g>

    <!-- 右侧区域 -->
    <g transform="translate(880, 100)">
        <!-- src 目录 -->
        <rect x="0" y="0" width="800" height="280" rx="8" fill="#e2e8f0" filter="url(#dropShadow)"/>
        <text x="20" y="30" class="folder">📁 src</text>
        <text x="200" y="30" class="description">前端源代码</text>
        <g transform="translate(40, 50)">
            <text x="0" y="20" class="file">📄 Dashboard.jsx</text>
            <text x="200" y="20" class="description">主控制面板组件</text>
            <text x="0" y="45" class="file">📄 ErrorBoundary.jsx</text>
            <text x="200" y="45" class="description">错误边界处理</text>
            <text x="0" y="70" class="file">📄 ErrorLog.jsx</text>
            <text x="200" y="70" class="description">错误日志组件</text>
            <text x="0" y="95" class="file">📄 ErrorState.jsx</text>
            <text x="200" y="95" class="description">错误状态展示</text>
            <text x="0" y="120" class="file">📄 index.js</text>
            <text x="200" y="120" class="description">入口文件</text>
            <text x="0" y="145" class="file">📄 LoadingState.jsx</text>
            <text x="200" y="145" class="description">加载状态组件</text>
            <text x="0" y="170" class="file">📄 PerformanceChart.jsx</text>
            <text x="200" y="170" class="description">性能图表组件</text>
            <text x="0" y="195" class="file">📄 StatusCard.jsx</text>
            <text x="200" y="195" class="description">状态卡片组件</text>
            <text x="0" y="220" class="file">📄 SystemHealth.jsx</text>
            <text x="200" y="220" class="description">系统健康监控组件</text>
        </g>

        <!-- utils 目录 -->
        <g transform="translate(0, 300)">
            <rect x="0" y="0" width="800" height="90" rx="8" fill="#e2e8f0" filter="url(#dropShadow)"/>
            <text x="20" y="30" class="folder">📁 utils</text>
            <text x="200" y="30" class="description">工具函数</text>
            <g transform="translate(40, 50)">
                <text x="0" y="20" class="file">📄 timeZone.js</text>
                <text x="200" y="20" class="description">时区处理工具</text>
                <text x="400" y="20" class="file">📄 validation.js</text>
                <text x="600" y="20" class="description">数据验证工具</text>
            </g>
        </g>
    </g>

    <!-- 根目录配置文件 -->
    <g transform="translate(40, 580)">
        <rect x="0" y="0" width="1640" height="140" rx="8" fill="#e2e8f0" filter="url(#dropShadow)"/>
        <text x="20" y="30" class="folder">📁 根目录配置文件</text>
        <g transform="translate(40, 50)">
            <text x="0" y="20" class="file">📄 package.json</text>
            <text x="200" y="20" class="description">项目依赖配置</text>
            <text x="400" y="20" class="file">📄 webpack.config.js</text>
            <text x="600" y="20" class="description">Webpack构建配置</text>
            <text x="800" y="20" class="file">📄 .babelrc</text>
            <text x="1000" y="20" class="description">Babel配置</text>
            <text x="0" y="45" class="file">📄 vercel.json</text>
            <text x="200" y="45" class="description">Vercel部署配置</text>
            <text x="400" y="45" class="file">📄 README.md</text>
            <text x="600" y="45" class="description">项目说明文档</text>
            <text x="800" y="45" class="file">📄 .gitignore</text>
            <text x="1000" y="45" class="description">Git忽略配置</text>
        </g>
    </g>

    <!-- 技术栈说明 -->
    <g transform="translate(40, 740)">
        <rect x="0" y="0" width="1640" height="220" rx="8" fill="#f8fafc" stroke="#e2e8f0" stroke-width="2"/>
        <text x="20" y="30" class="folder">技术栈说明</text>
        
        <!-- 前端技术 -->
        <g transform="translate(40, 60)">
            <text x="0" y="0" class="tech-title">前端技术</text>
            <text x="0" y="30" class="file">• React 18 - 用户界面开发</text>
            <text x="0" y="60" class="file">• Recharts - 数据可视化图表</text>
            <text x="0" y="90" class="file">• Lucide React - 图标组件库</text>
            <text x="0" y="120" class="file">• Webpack 5 - 项目构建工具</text>
        </g>
        
        <!-- 后端技术 -->
        <g transform="translate(800, 60)">
            <text x="0" y="0" class="tech-title">后端技术</text>
            <text x="0" y="30" class="file">• Vercel Serverless - 云函数部署</text>
            <text x="0" y="60" class="file">• MongoDB - 数据存储</text>
            <text x="0" y="90" class="file">• Telegraf.js - Telegram Bot 开发框架</text>
            <text x="0" y="120" class="file">• Node.js - 运行环境</text>
        </g>
    </g>
</svg>